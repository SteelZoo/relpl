
stages:
  - build
  - package
  - deploy

build:
  image: azul/zulu-openjdk:17-latest
  stage: build
  script:
    - cat
    - cd ./BE/relpl
    - chmod +x ./gradlew
    - ./gradlew clean
    - ./gradlew build
  artifacts:
    paths:
      - ./BE/relpl/build/libs/*.jar
    expire_in: 10 min

package:
  image: docker:latest
  stage: package
  variables:
    IMAGE_NAME: vadeski/ksh-backend
  services:
    - name: docker:dind
      command: ["--privileged=true", "--tls=false"]
  before_script:
    - echo "$DOCKER_HUB_PW" | docker login --username $DOCKER_HUB_USER --password-stdin
    - echo "로그인 성공"
  script:
    - cd ./BE/relpl
    - docker buildx create --use --name mybuilder
    - docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:$CI_PIPELINE_IID --push .
    - docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:latest --push .
    - echo "build complete"
  after_script:
    - docker logout

deploy-was:
  stage: deploy
  variables:
    IMAGE_NAME: vadeski/ksh-backend
  tags:
    - ksh-runner
  before_script:
#    - docker login --username $DOCKER_HUB_USER --password-stdin < $DOCKER_HUB_PW
    - echo "$DOCKER_HUB_PW" | docker login --username $DOCKER_HUB_USER --password-stdin
    #- echo "$DOCKER_HUB_PW" | docker login --username  --password-stdin
  script:
    - docker stop ksh-backend || true
    - docker rm ksh-backend || true
    - docker rmi $IMAGE_NAME || true
    - docker pull $IMAGE_NAME:latest
    - docker run -d --restart always -e TZ=Asia/Seoul -e JASYPT_PASSWORD=$JASYPT_PASSWORD -e MONGODB_PORT=$MONBODB_PORT -e REDIS_PORT=$REDIS_PORT -p $SPRING_PORT:9090/tcp --name ksh-backend $IMAGE_NAME:latest
  after_script:
    - docker logout
  when: on_success
  only:
    - be/feat/cicd